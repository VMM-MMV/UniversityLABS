services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: myapp_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/myapp_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      GAME_SERVER_PORT: 8080
      CHAT_SERVER_PORT: 8081
    ports:
      - "8080:8080"
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped

volumes:
  postgres_data:
    name: postgres_data

networks:
  app_network:
    name: app_network
    driver: bridge